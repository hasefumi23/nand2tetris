// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // 24576（0x6000）より大きいアドレスは無効
    // メモリ:     16383.to_s(2) #=> 011111111111111
    // スクリーン: 24575.to_s(2) #=> 101111111111111
    // キーボード: 24576.to_s(2) #=> 110000000000000
    // 13ビット目と14ビット目でどのI/Oに対しての操作なのかを特定可能
    DMux4Way(in=load, sel[0]=address[13], sel[1]=address[14], a=should-operate-memory0, b=should-operate-memory1, c=should-operate-screen, d=should-operate-key);
    
    // 0 から 16384（0x4000）の範囲のアドレスはRAM16K
    // in[16], load, address[14] out[16]
    Or(a=should-operate-memory0, b=should-operate-memory1, out=should-operate-memory);
    RAM16K(in=in, load=should-operate-memory, address=address[0..13], out=ram-out);

    // 16384（0x4000）から24575 （0x5FFF）の範囲のアドレスはスクリーン
    // in[16], load, address[13] out[16]
    Screen(in=in, load=should-operate-screen, address=address[0..12], out=screen-out);

    // 24576 （0x6000）はキーボードのメモリマップにアクセスする
    // out[16]
    Keyboard(out=key-out);

    Mux4Way16(a=ram-out, b=ram-out, c=screen-out, d=key-out, sel[0]=address[13], sel[1]=address[14], out=out);
}
