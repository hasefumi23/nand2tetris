// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Not(in=sel[0], out=notsela0);
    Not(in=sel[1], out=notsela1);
    Not(in=sel[2], out=notsela2);
    And(a=notsela0, b=notsela1, out=notanda01);
    And(a=notsela2, b=notanda01, out=andsela012);
    And(a=a[0], b=andsela012, out=outa0);
    And(a=a[1], b=andsela012, out=outa1);
    And(a=a[2], b=andsela012, out=outa2);
    And(a=a[3], b=andsela012, out=outa3);
    And(a=a[4], b=andsela012, out=outa4);
    And(a=a[5], b=andsela012, out=outa5);
    And(a=a[6], b=andsela012, out=outa6);
    And(a=a[7], b=andsela012, out=outa7);
    And(a=a[8], b=andsela012, out=outa8);
    And(a=a[9], b=andsela012, out=outa9);
    And(a=a[10], b=andsela012, out=outa10);
    And(a=a[11], b=andsela012, out=outa11);
    And(a=a[12], b=andsela012, out=outa12);
    And(a=a[13], b=andsela012, out=outa13);
    And(a=a[14], b=andsela012, out=outa14);
    And(a=a[15], b=andsela012, out=outa15);

    Not(in=sel[1], out=notselb1);
    Not(in=sel[2], out=notselb2);
    And(a=notselb1, b=notselb2, out=andselb12);
    And(a=sel[0], b=andselb12, out=andselb012);
    And(a=b[0], b=andselb012, out=outb0);
    And(a=b[1], b=andselb012, out=outb1);
    And(a=b[2], b=andselb012, out=outb2);
    And(a=b[3], b=andselb012, out=outb3);
    And(a=b[4], b=andselb012, out=outb4);
    And(a=b[5], b=andselb012, out=outb5);
    And(a=b[6], b=andselb012, out=outb6);
    And(a=b[7], b=andselb012, out=outb7);
    And(a=b[8], b=andselb012, out=outb8);
    And(a=b[9], b=andselb012, out=outb9);
    And(a=b[10], b=andselb012, out=outb10);
    And(a=b[11], b=andselb012, out=outb11);
    And(a=b[12], b=andselb012, out=outb12);
    And(a=b[13], b=andselb012, out=outb13);
    And(a=b[14], b=andselb012, out=outb14);
    And(a=b[15], b=andselb012, out=outb15);

    // A OR B
    Or(a=outa0, b=outb0, out=outab0);
    Or(a=outa1, b=outb1, out=outab1);
    Or(a=outa2, b=outb2, out=outab2);
    Or(a=outa3, b=outb3, out=outab3);
    Or(a=outa4, b=outb4, out=outab4);
    Or(a=outa5, b=outb5, out=outab5);
    Or(a=outa6, b=outb6, out=outab6);
    Or(a=outa7, b=outb7, out=outab7);
    Or(a=outa8, b=outb8, out=outab8);
    Or(a=outa9, b=outb9, out=outab9);
    Or(a=outa10, b=outb10, out=outab10);
    Or(a=outa11, b=outb11, out=outab11);
    Or(a=outa12, b=outb12, out=outab12);
    Or(a=outa13, b=outb13, out=outab13);
    Or(a=outa14, b=outb14, out=outab14);
    Or(a=outa15, b=outb15, out=outab15);

    Not(in=sel[0], out=notselc0);
    Not(in=sel[2], out=notselc2);
    And(a=notselc0, b=notselc2, out=andselc02);
    And(a=sel[1], b=andselc02, out=andselc012);
    And(a=c[0], b=andselc012, out=outc0);
    And(a=c[1], b=andselc012, out=outc1);
    And(a=c[2], b=andselc012, out=outc2);
    And(a=c[3], b=andselc012, out=outc3);
    And(a=c[4], b=andselc012, out=outc4);
    And(a=c[5], b=andselc012, out=outc5);
    And(a=c[6], b=andselc012, out=outc6);
    And(a=c[7], b=andselc012, out=outc7);
    And(a=c[8], b=andselc012, out=outc8);
    And(a=c[9], b=andselc012, out=outc9);
    And(a=c[10], b=andselc012, out=outc10);
    And(a=c[11], b=andselc012, out=outc11);
    And(a=c[12], b=andselc012, out=outc12);
    And(a=c[13], b=andselc012, out=outc13);
    And(a=c[14], b=andselc012, out=outc14);
    And(a=c[15], b=andselc012, out=outc15);
    
    Not(in=sel[2], out=notseld2);
    And(a=sel[0], b=sel[1], out=andseld01);
    And(a=andseld01, b=notseld2, out=andseld012);
    And(a=d[0], b=andseld012, out=outd0);
    And(a=d[1], b=andseld012, out=outd1);
    And(a=d[2], b=andseld012, out=outd2);
    And(a=d[3], b=andseld012, out=outd3);
    And(a=d[4], b=andseld012, out=outd4);
    And(a=d[5], b=andseld012, out=outd5);
    And(a=d[6], b=andseld012, out=outd6);
    And(a=d[7], b=andseld012, out=outd7);
    And(a=d[8], b=andseld012, out=outd8);
    And(a=d[9], b=andseld012, out=outd9);
    And(a=d[10], b=andseld012, out=outd10);
    And(a=d[11], b=andseld012, out=outd11);
    And(a=d[12], b=andseld012, out=outd12);
    And(a=d[13], b=andseld012, out=outd13);
    And(a=d[14], b=andseld012, out=outd14);
    And(a=d[15], b=andseld012, out=outd15);

    // C OR D
    Or(a=outc0, b=outd0, out=outcd0);
    Or(a=outc1, b=outd1, out=outcd1);
    Or(a=outc2, b=outd2, out=outcd2);
    Or(a=outc3, b=outd3, out=outcd3);
    Or(a=outc4, b=outd4, out=outcd4);
    Or(a=outc5, b=outd5, out=outcd5);
    Or(a=outc6, b=outd6, out=outcd6);
    Or(a=outc7, b=outd7, out=outcd7);
    Or(a=outc8, b=outd8, out=outcd8);
    Or(a=outc9, b=outd9, out=outcd9);
    Or(a=outc10, b=outd10, out=outcd10);
    Or(a=outc11, b=outd11, out=outcd11);
    Or(a=outc12, b=outd12, out=outcd12);
    Or(a=outc13, b=outd13, out=outcd13);
    Or(a=outc14, b=outd14, out=outcd14);
    Or(a=outc15, b=outd15, out=outcd15);

    // (A OR B) OR (C OR D)
    Or(a=outab0, b=outcd0, out=outabcd0);
    Or(a=outab1, b=outcd1, out=outabcd1);
    Or(a=outab2, b=outcd2, out=outabcd2);
    Or(a=outab3, b=outcd3, out=outabcd3);
    Or(a=outab4, b=outcd4, out=outabcd4);
    Or(a=outab5, b=outcd5, out=outabcd5);
    Or(a=outab6, b=outcd6, out=outabcd6);
    Or(a=outab7, b=outcd7, out=outabcd7);
    Or(a=outab8, b=outcd8, out=outabcd8);
    Or(a=outab9, b=outcd9, out=outabcd9);
    Or(a=outab10, b=outcd10, out=outabcd10);
    Or(a=outab11, b=outcd11, out=outabcd11);
    Or(a=outab12, b=outcd12, out=outabcd12);
    Or(a=outab13, b=outcd13, out=outabcd13);
    Or(a=outab14, b=outcd14, out=outabcd14);
    Or(a=outab15, b=outcd15, out=outabcd15);

    Not(in=sel[0], out=notsele0);
    Not(in=sel[1], out=notsele1);
    And(a=notsele0, b=notsele1, out=notandsele01);
    And(a=notandsele01, b=sel[2], out=andsele012);
    And(a=e[0], b=andsele012, out=oute0);
    And(a=e[1], b=andsele012, out=oute1);
    And(a=e[2], b=andsele012, out=oute2);
    And(a=e[3], b=andsele012, out=oute3);
    And(a=e[4], b=andsele012, out=oute4);
    And(a=e[5], b=andsele012, out=oute5);
    And(a=e[6], b=andsele012, out=oute6);
    And(a=e[7], b=andsele012, out=oute7);
    And(a=e[8], b=andsele012, out=oute8);
    And(a=e[9], b=andsele012, out=oute9);
    And(a=e[10], b=andsele012, out=oute10);
    And(a=e[11], b=andsele012, out=oute11);
    And(a=e[12], b=andsele012, out=oute12);
    And(a=e[13], b=andsele012, out=oute13);
    And(a=e[14], b=andsele012, out=oute14);
    And(a=e[15], b=andsele012, out=oute15);

    Not(in=sel[1], out=notself1);
    And(a=sel[0], b=sel[2], out=andself02);
    And(a=andself02, b=notself1, out=andself012);
    And(a=f[0], b=andself012, out=outf0);
    And(a=f[1], b=andself012, out=outf1);
    And(a=f[2], b=andself012, out=outf2);
    And(a=f[3], b=andself012, out=outf3);
    And(a=f[4], b=andself012, out=outf4);
    And(a=f[5], b=andself012, out=outf5);
    And(a=f[6], b=andself012, out=outf6);
    And(a=f[7], b=andself012, out=outf7);
    And(a=f[8], b=andself012, out=outf8);
    And(a=f[9], b=andself012, out=outf9);
    And(a=f[10], b=andself012, out=outf10);
    And(a=f[11], b=andself012, out=outf11);
    And(a=f[12], b=andself012, out=outf12);
    And(a=f[13], b=andself012, out=outf13);
    And(a=f[14], b=andself012, out=outf14);
    And(a=f[15], b=andself012, out=outf15);

    // E OR F
    Or(a=oute0, b=outf0, out=outef0);
    Or(a=oute1, b=outf1, out=outef1);
    Or(a=oute2, b=outf2, out=outef2);
    Or(a=oute3, b=outf3, out=outef3);
    Or(a=oute4, b=outf4, out=outef4);
    Or(a=oute5, b=outf5, out=outef5);
    Or(a=oute6, b=outf6, out=outef6);
    Or(a=oute7, b=outf7, out=outef7);
    Or(a=oute8, b=outf8, out=outef8);
    Or(a=oute9, b=outf9, out=outef9);
    Or(a=oute10, b=outf10, out=outef10);
    Or(a=oute11, b=outf11, out=outef11);
    Or(a=oute12, b=outf12, out=outef12);
    Or(a=oute13, b=outf13, out=outef13);
    Or(a=oute14, b=outf14, out=outef14);
    Or(a=oute15, b=outf15, out=outef15);

    Not(in=sel[0], out=notselg0);
    And(a=sel[1], b=sel[2], out=andselg12);
    And(a=notselg0, b=andselg12, out=andselg012);
    And(a=g[0], b=andselg012, out=outg0);
    And(a=g[1], b=andselg012, out=outg1);
    And(a=g[2], b=andselg012, out=outg2);
    And(a=g[3], b=andselg012, out=outg3);
    And(a=g[4], b=andselg012, out=outg4);
    And(a=g[5], b=andselg012, out=outg5);
    And(a=g[6], b=andselg012, out=outg6);
    And(a=g[7], b=andselg012, out=outg7);
    And(a=g[8], b=andselg012, out=outg8);
    And(a=g[9], b=andselg012, out=outg9);
    And(a=g[10], b=andselg012, out=outg10);
    And(a=g[11], b=andselg012, out=outg11);
    And(a=g[12], b=andselg012, out=outg12);
    And(a=g[13], b=andselg012, out=outg13);
    And(a=g[14], b=andselg012, out=outg14);
    And(a=g[15], b=andselg012, out=outg15);

    And(a=sel[1], b=sel[2], out=andselh12);
    And(a=sel[0], b=andselh12, out=andselh012);
    And(a=h[0], b=andselh012, out=outh0);
    And(a=h[1], b=andselh012, out=outh1);
    And(a=h[2], b=andselh012, out=outh2);
    And(a=h[3], b=andselh012, out=outh3);
    And(a=h[4], b=andselh012, out=outh4);
    And(a=h[5], b=andselh012, out=outh5);
    And(a=h[6], b=andselh012, out=outh6);
    And(a=h[7], b=andselh012, out=outh7);
    And(a=h[8], b=andselh012, out=outh8);
    And(a=h[9], b=andselh012, out=outh9);
    And(a=h[10], b=andselh012, out=outh10);
    And(a=h[11], b=andselh012, out=outh11);
    And(a=h[12], b=andselh012, out=outh12);
    And(a=h[13], b=andselh012, out=outh13);
    And(a=h[14], b=andselh012, out=outh14);
    And(a=h[15], b=andselh012, out=outh15);

    // G OR H
    Or(a=outg0, b=outh0, out=outgh0);
    Or(a=outg1, b=outh1, out=outgh1);
    Or(a=outg2, b=outh2, out=outgh2);
    Or(a=outg3, b=outh3, out=outgh3);
    Or(a=outg4, b=outh4, out=outgh4);
    Or(a=outg5, b=outh5, out=outgh5);
    Or(a=outg6, b=outh6, out=outgh6);
    Or(a=outg7, b=outh7, out=outgh7);
    Or(a=outg8, b=outh8, out=outgh8);
    Or(a=outg9, b=outh9, out=outgh9);
    Or(a=outg10, b=outh10, out=outgh10);
    Or(a=outg11, b=outh11, out=outgh11);
    Or(a=outg12, b=outh12, out=outgh12);
    Or(a=outg13, b=outh13, out=outgh13);
    Or(a=outg14, b=outh14, out=outgh14);
    Or(a=outg15, b=outh15, out=outgh15);

    // (E OR F) OR (G OR H)
    Or(a=outef0, b=outgh0, out=outefgh0);
    Or(a=outef1, b=outgh1, out=outefgh1);
    Or(a=outef2, b=outgh2, out=outefgh2);
    Or(a=outef3, b=outgh3, out=outefgh3);
    Or(a=outef4, b=outgh4, out=outefgh4);
    Or(a=outef5, b=outgh5, out=outefgh5);
    Or(a=outef6, b=outgh6, out=outefgh6);
    Or(a=outef7, b=outgh7, out=outefgh7);
    Or(a=outef8, b=outgh8, out=outefgh8);
    Or(a=outef9, b=outgh9, out=outefgh9);
    Or(a=outef10, b=outgh10, out=outefgh10);
    Or(a=outef11, b=outgh11, out=outefgh11);
    Or(a=outef12, b=outgh12, out=outefgh12);
    Or(a=outef13, b=outgh13, out=outefgh13);
    Or(a=outef14, b=outgh14, out=outefgh14);
    Or(a=outef15, b=outgh15, out=outefgh15);

    // ((A OR B) OR (C OR D)) OR ((E OR F) OR (G OR H))
    Or(a=outabcd0, b=outefgh0, out=out[0]);
    Or(a=outabcd1, b=outefgh1, out=out[1]);
    Or(a=outabcd2, b=outefgh2, out=out[2]);
    Or(a=outabcd3, b=outefgh3, out=out[3]);
    Or(a=outabcd4, b=outefgh4, out=out[4]);
    Or(a=outabcd5, b=outefgh5, out=out[5]);
    Or(a=outabcd6, b=outefgh6, out=out[6]);
    Or(a=outabcd7, b=outefgh7, out=out[7]);
    Or(a=outabcd8, b=outefgh8, out=out[8]);
    Or(a=outabcd9, b=outefgh9, out=out[9]);
    Or(a=outabcd10, b=outefgh10, out=out[10]);
    Or(a=outabcd11, b=outefgh11, out=out[11]);
    Or(a=outabcd12, b=outefgh12, out=out[12]);
    Or(a=outabcd13, b=outefgh13, out=out[13]);
    Or(a=outabcd14, b=outefgh14, out=out[14]);
    Or(a=outabcd15, b=outefgh15, out=out[15]);
}
